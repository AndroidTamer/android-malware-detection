#!/usr/bin/env python

import virustotal
import psycopg2, argparse, getpass, json, sys, urllib2

def main():
  # Arguments
  parser = argparse.ArgumentParser(description='Scan the files')
  parser.add_argument('-H', metavar='host', type=str,
      nargs=1, required=True)
  parser.add_argument('-d', metavar='database', type=str,
      nargs=1, required=True)
  parser.add_argument('-u', metavar='username', type=str,
      nargs=1, required=True)
  parser.add_argument('-c', metavar='virustotal config file', type=str,
      nargs=1, required=True)
  args = parser.parse_args()

  passwd = getpass.getpass()
  vtconfigfile = args.c[0]

  try:
    # Establish the connection to the database.
    sql = 'host=%s dbname=%s user=%s password=%s' % \
        (args.H[0], args.d[0], args.u[0], passwd)
    conn = psycopg2.connect(sql)
    cur =  conn.cursor()

    # Get all the apps from the database.
    sql = 'SELECT a_id, a_name, a_path FROM apps WHERE a_vt_sha256 IS NULL'
    cur.execute(sql)
    apps = cur.fetchall()

    total, count = len(apps), .0

    # Upload the apps to VirusTotal.
    for app in apps:
      a_id, a_name, a_path = app[0], app[1], app[2]
      count += 1

      # Progress bar
      sys.stdout.write('\r')
      for i in range(80):
        sys.stdout.write(' ')
      sys.stdout.write('\r[%d%% | Req. %d] Upload %s ' \
          % (count * 100 / total, count, a_name))
      sys.stdout.flush()

      try:
        # Get the response.
        response = virustotal.scan_file(a_path, vtconfigfile, verbose=True)

        # Update the database.
        sql = 'UPDATE apps SET a_vt_sha256 = %s WHERE a_id = %s'
        cur.execute(sql, (response['sha256'], a_id))
        conn.commit()

      except urllib2.HTTPError as e:
        # Catch the HTTP ERROR 413.
        pass

    # End of the progress bar
    print ''

  except Exception as e:
    print e

  finally:
    cur.close()
    conn.close()


if __name__ == '__main__':
  main()

